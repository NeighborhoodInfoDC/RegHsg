} else {
warning("region data already read in")
}
jur <- region %>%
filter_bk(fips = currentfips) %>%
select_vars()
currentjur_county <- jur %>%
group_by(countylandusedescription) %>%
count()
if (!file.exists(paste0("../Data/", filepath, "-county-land-use.csv"))) {
write_csv(currentjur_county,
paste0("../Data/", filepath, "-county-land-use.csv"))
}
rm(currentjur_county)
res_codes <-
c("CONDO - VERTICAL",
"CONDO HORIZONTAL",
"CONDO HORIZONTAL COMBINED",
"CONDO VERTICAL",
"CONDO VERTICAL COMBINED",
"CONDO, INVESTMENT, HORIZONTAL",
"CONDO, INVESTMENT, VERTICAL",
"COOPERATIVE - HORIZONTAL - MIXED USE",
"COOPERATIVE - VERTICAL - MIXED USE",
"ELEVATOR APT",
"RES - CONVERSIONS - MORE THAN 5 UNITS",
"RES - COOPERATIVE - VERTICAL",
"RES CONVERSIONS - 5 UNITS",
"RES CONVERSIONS - LESS THAN 5 UNITS",
"RES COOPERATIVE - HORIZONTAL",
"RES FLATS - LESS THAN 5 UNITS",
"RES MIXED USE",
"RES SINGLE FAMILY DETACHED",
"RES SINGLE FAMILY GARAGE",
"RES SINGLE FAMILY MISC",
"RES SINGLE FAMILY ROW",
"RES SINGLE FAMILY SEMI-DETACHED",
"RESIDENTIAL - MULTIFAMILY MISC",
"RESIDENTIAL TRANSIENT MISC",
"SINGLE FAMILY - RES - NON CONFORMING",
"WALK UP APT"
)
jur <- jur %>%
mutate(residential =
ifelse(countylandusedescription %in% res_codes, 1, 0))
rm(res_codes)
mf <- c("CONDO - VERTICAL",
"CONDO HORIZONTAL",
"CONDO HORIZONTAL COMBINED",
"CONDO VERTICAL",
"CONDO VERTICAL COMBINED",
"CONDO, INVESTMENT, HORIZONTAL",
"CONDO, INVESTMENT, VERTICAL",
"COOPERATIVE - HORIZONTAL - MIXED USE",
"COOPERATIVE - VERTICAL - MIXED USE",
"ELEVATOR APT",
"RES - CONVERSIONS - MORE THAN 5 UNITS",
"RES - COOPERATIVE - VERTICAL",
"RES CONVERSIONS - 5 UNITS",
"RES CONVERSIONS - LESS THAN 5 UNITS",
"RES COOPERATIVE - HORIZONTAL",
"RES FLATS - LESS THAN 5 UNITS",
"RES MIXED USE",
"RESIDENTIAL - MULTIFAMILY MISC",
"WALK UP APT")
sf <- c("RES SINGLE FAMILY DETACHED",
"RES SINGLE FAMILY MISC",
"RES SINGLE FAMILY ROW",
"RES SINGLE FAMILY SEMI-DETACHED",
"SINGLE FAMILY - RES - NON CONFORMING")
vacant <- c("FALSE VACANT",
"FALSE VACANT ABUTTING LOT (RES)",
"IMPROVED-USE NOT SPECIFIED",
"IMPROVED W/ PERMIT COMMERCIAL",
"TRUE VACANT",
"VACANT - UNIMPROVED PARKING",
"VACANT COMM USE, MISC COMM IMPRS",
"VACANT COMM W/ ZONING LIMITATIONS",
"VACANT W/ PERMIT COMMERCIAL",
"VACANT W/COMMERCIAL USE",
"VACANT W/PERMIT",
"VACANT W/ZONING LIMITS")
allother <- c("BANKS/FINANCIAL",
"CLUB PRIVATE",
"COMMERCIAL - OFFICE CONDOMINIUM",
"COMMERCIAL - OFFICE MISC",
"COMMERCIAL - RETAIL - CONDOMINIUM",
"COMMERCIAL - RETAIL - MISC",
"COMMERCIAL USE",
"CONDO GARAGE",
"DORMITORY",
"EDUCATIONAL",
"EMBASSIES/CHANCERIES/ETC",
"FAST FOOD RESTAURANTS",
"FRATERNITY/SORORITY HOUSE",
"GARAGE, MULTIFAMILY",
"GARAGE/VEHICLE SALES",
"HEALTH CARE FACILITY",
"HOTEL LARGE",
"HOTEL SMALL",
"INDUSTRIAL - MISC",
"INN",
"LIGHT INDUSTRIAL",
"MEDICAL",
"MOTEL",
"MUSEUMS/LIBRARIES/GALLERIES",
"OFFICE - CONDOMINIUM HORIZONTAL",
"OFFICE - CONDOMINIUM VERTICAL",
"OFFICE - LARGE",
"OFFICE - SMALL",
"PARKING GARAGE",
"PARKING LOT",
"PLANNED COMMERCIAL DEVELOPMENT",
"PUBLIC SERVICE",
"RAW MATERIAL HANDLING",
"RECREATIONAL",
"RELIGIOUS",
"RES SINGLE FAMILY GARAGE",
"RESIDENTIAL TRANSIENT MISC",
"RESTAURANTS",
"SPECIAL PURPOSE - MISC",
"SPECIAL PURPOSE MEMORIAL",
"STORE - BARBER/BEAUTY SHOP",
"STORE - DEPARTMENT",
"STORE - MISC",
"STORE - RESTAURANT",
"STORE - SHOPPING CENTER/MALL",
"STORE - SMALL/1 STORY",
"STORE - SUPER MARKET",
"THEATERS/ENTERTAINMENT",
"TOURIST HOMES",
"TRUCK TERMINAL",
"TRUE VACANT COMMERCIAL",
"UNIMPROVED-USE NOT SPECIFIED",
"UNIMPROVED PARKING LOT",
"VEHICLE SERVICE STATION - KIOSK",
"VEHICLE SERVICE STATION - KIOSK/OTHER",
"VEHICLE SERVICE STATION - MARKET/OTHER",
"VEHICLE SERVICE STATION - VINTAGE",
"VEHICLE SERVICE STATION, MARKET",
"WAREHOUSE - CONDOMINIUM",
"WAREHOUSING - 1 STORY",
"WAREHOUSING - MULTI-STORY"
)
jur <- jur %>%
mutate(category = case_when(
countylandusedescription %in% mf ~ "mf",
countylandusedescription %in% allother ~ "all other category",
countylandusedescription %in% sf ~ "sf",
countylandusedescription %in% vacant ~ "vacant"))
rm(mf, sf, vacant, allother)
sfd <- c("RES SINGLE FAMILY DETACHED",
"RES SINGLE FAMILY SEMI-DETACHED")
sfa <- c("RES SINGLE FAMILY ROW")
condo <- c("CONDO - VERTICAL",
"CONDO GARAGE",
"CONDO HORIZONTAL",
"CONDO HORIZONTAL COMBINED",
"CONDO VERTICAL",
"CONDO VERTICAL COMBINED",
"CONDO, INVESTMENT, HORIZONTAL",
"CONDO, INVESTMENT, VERTICAL",
"COOPERATIVE - HORIZONTAL - MIXED USE",
"COOPERATIVE - VERTICAL - MIXED USE",
"RES - CONVERSIONS - MORE THAN 5 UNITS",
"RES - COOPERATIVE - VERTICAL",
"RES CONVERSIONS - 5 UNITS",
"RES CONVERSIONS - LESS THAN 5 UNITS",
"RES COOPERATIVE - HORIZONTAL")
apt <- c("ELEVATOR APT",
"RES FLATS - LESS THAN 5 UNITS",
"WALK UP APT")
com <- c("BANKS/FINANCIAL",
"CLUB PRIVATE",
"COMMERCIAL - OFFICE CONDOMINIUM",
"COMMERCIAL - OFFICE MISC",
"COMMERCIAL - RETAIL - CONDOMINIUM",
"COMMERCIAL - RETAIL - MISC",
"COMMERCIAL USE",
"FAST FOOD RESTAURANTS",
"GARAGE/VEHICLE SALES",
"HEALTH CARE FACILITY",
"HOTEL LARGE",
"HOTEL SMALL",
"IMPROVED W/ PERMIT COMMERCIAL",
"INDUSTRIAL - MISC",
"INN",
"LIGHT INDUSTRIAL",
"MEDICAL",
"MOTEL",
"PARKING GARAGE",
"PARKING LOT",
"PLANNED COMMERCIAL DEVELOPMENT",
"RAW MATERIAL HANDLING",
"RECREATIONAL",
"RESTAURANTS",
"STORE - BARBER/BEAUTY SHOP",
"STORE - DEPARTMENT",
"STORE - MISC",
"STORE - RESTAURANT",
"STORE - SHOPPING CENTER/MALL",
"STORE - SMALL/1 STORY",
"STORE - SUPER MARKET",
"THEATERS/ENTERTAINMENT",
"TOURIST HOMES",
"VEHICLE SERVICE STATION - MARKET/OTHER",
"VEHICLE SERVICE STATION - VINTAGE",
"VEHICLE SERVICE STATION, MARKET",
"WAREHOUSE - CONDOMINIUM",
"WAREHOUSING - 1 STORY",
"WAREHOUSING - MULTI-STORY")
office <- c("OFFICE - CONDOMINIUM HORIZONTAL",
"OFFICE - CONDOMINIUM VERTICAL",
"OFFICE - LARGE",
"OFFICE - SMALL")
vacantcom <- c("TRUE VACANT COMMERCIAL",
"VACANT COMM USE, MISC COMM IMPRS",
"VACANT COMM W/ ZONING LIMITATIONS",
"VACANT W/ PERMIT COMMERCIAL",
"VACANT W/COMMERCIAL USE")
vacantother <- c("FALSE VACANT",
"FALSE VACANT ABUTTING LOT (RES)",
"IMPROVED-USE NOT SPECIFIED",
"TRUE VACANT",
"VACANT - UNIMPROVED PARKING",
"VACANT W/PERMIT",
"VACANT W/ZONING LIMITS")
otherres <-  c("RES MIXED USE",
"RES SINGLE FAMILY GARAGE",
"RES SINGLE FAMILY MISC",
"RESIDENTIAL - MULTIFAMILY MISC",
"RESIDENTIAL TRANSIENT MISC",
"SINGLE FAMILY - RES - NON CONFORMING")
othernonres <- c("DORMITORY",
"EDUCATIONAL",
"EMBASSIES/CHANCERIES/ETC",
"FRATERNITY/SORORITY HOUSE",
"GARAGE, MULTIFAMILY",
"MUSEUMS/LIBRARIES/GALLERIES",
"PUBLIC SERVICE",
"RELIGIOUS",
"SPECIAL PURPOSE - MISC",
"SPECIAL PURPOSE MEMORIAL",
"TRUCK TERMINAL",
"UNIMPROVED-USE NOT SPECIFIED",
"UNIMPROVED PARKING LOT",
"VEHICLE SERVICE STATION - KIOSK",
"VEHICLE SERVICE STATION - KIOSK/OTHER")
jur <- jur %>%
mutate(category_detail = case_when(
countylandusedescription %in% sfd ~ "single family detached",
countylandusedescription %in% sfa ~ "single family attached",
countylandusedescription %in% condo ~ "condo",
countylandusedescription %in% apt ~ "rental apartment",
countylandusedescription %in% com ~ "commerical",
countylandusedescription %in% office ~ "office",
countylandusedescription %in% vacantcom ~ "vacant commercial",
countylandusedescription %in% vacantother ~ "vacant all other",
countylandusedescription %in% otherres ~ "all other residential",
countylandusedescription %in% othernonres ~ "all other non residential"))
rm(sfd, sfa, condo,apt,com,office,vacantcom,vacantother,otherres,othernonres)
vertical <- c("CONDO - VERTICAL",
"CONDO VERTICAL COMBINED",
"CONDO, INVESTMENT, VERTICAL",
"COOPERATIVE - VERTICAL - MIXED USE",
"ELEVATOR APT",
"RES - CONVERSIONS - MORE THAN 5 UNITS",
"RES - COOPERATIVE - VERTICAL")
horizontal <- c("CONDO HORIZONTAL",
"CONDO HORIZONTAL COMBINED",
"CONDO VERTICAL",
"CONDO, INVESTMENT, HORIZONTAL",
"COOPERATIVE - HORIZONTAL - MIXED USE",
"WALK UP APT")
othermf <- c("RES CONVERSIONS - 5 UNITS",
"RES CONVERSIONS - LESS THAN 5 UNITS",
"RES COOPERATIVE - HORIZONTAL",
"RES FLATS - LESS THAN 5 UNITS",
"RES MIXED USE",
"RESIDENTIAL - MULTIFAMILY MISC")
jur <- jur %>%
mutate(building_type = case_when(
countylandusedescription %in% vertical ~ "vertical",
countylandusedescription %in% horizontal ~ "horizontal",
countylandusedescription %in% othermf ~ "other multi family structure"))
rm(vertical, horizontal, othermf )
jur %>%
filter(countylandusedescription == "FALSE VACANT") %>%
select(assessorsparcelnumberapnpin, propstreetname, owneroccupiedresidential) %>%
head(20)
count(jur, residential)
count(jur, is.na(residential))
if (TRUE %in% is.na(jur$residential)) {
warning("NAs introduced")
}
count(jur, category)
count(jur, is.na(category))
if (TRUE %in% is.na(jur$category)) {
warning("NAs introduced")
}
count(jur, category_detail)
count(jur, is.na(category_detail))
if (TRUE %in% is.na(jur$category_detail)) {
warning("NAs introduced")
}
newcat <- sum(!is.na(jur$building_type))
mf <- nrow(filter(jur, category == "mf"))
if (mf != newcat) {
warning(newcat, " observations categorized, expecting ", mf)
}
rm(newcat, mf)
count(jur, lotsizeareaunit)
jur <- jur %>%
mutate(lotsize_acres = case_when(lotsizeareaunit == "AC" ~ lotsizeorarea ,
lotsizeareaunit == "SF" ~ lotsizeorarea / 43560),
lotsize_sf = lotsize_acres * 43560) %>%
mutate_at(vars(lotsize_acres, lotsize_sf), ~ replace(., .==0, NA))
jur <- jur %>%
mutate(parcel_address = substr(assessorsparcelnumberapnpin, 1, 6))
bad_parcels <- jur %>%
group_by(propaddress) %>%
summarize(parcel = list(parcel_address)) %>%
mutate(unq_parcels = as.integer(map(parcel,
function(x) length(unique(x))))) %>%
filter(unq_parcels > 1)
bad_addresses <- bad_parcels %>%
pull(propaddress)
jur <- jur %>%
mutate(parcel_address = ifelse(propaddress %in% bad_addresses,
NA,
parcel_address))
rm(bad_addresses, bad_parcels)
x <- jur %>%
filter(residential == 1) %>%
group_by(propaddress) %>%
count() %>%
nrow()
y <- jur %>%
filter(residential == 1) %>%
group_by(propaddress, parcel_address) %>%
count() %>%
nrow()
if (x == y) {
print(paste0(x, " = ", y, ": clean collapse"))
} else if (y > x) {
warning("additional observations introduced")
}
rm(x, y)
jur <- jur %>%
mutate(house_letter = ifelse(str_detect(prophouseno, "[:alpha:]") == 1, 1, 0),
oldadd = propaddress,
new_houseno = ifelse(house_letter == 1,
str_replace(prophouseno, "[:alpha:]", ""),
prophouseno),
propaddress = ifelse(house_letter == 1,
paste(str_replace_all(new_houseno, "-", ""),
propstreetname,
propstreetsuffix,
sep = " "),
propaddress))
jur %>%
filter(house_letter == 1) %>%
select(oldadd, propaddress, category_detail) %>%
head(20)
stopifnot(sum(is.na(jur$propaddress)) == nrow(filter(jur,
is.na(propaddress) | is.na(prophouseno))))
jur <- jur %>%
classify_addresses()
count(jur, address_type)
if (TRUE %in% is.na(jur$address_type)) {
warning("NAs in address_type")
}
jur <- jur %>%
mutate(address_type = ifelse(category_detail %in% c("single family attached" ),
"single",
address_type))
multiples <- jur %>%
filter(address_type == "multiple")
singles <- jur %>%
filter(address_type == "single")
missing <- jur %>%
filter(address_type == "missing")
multiples <- multiples %>%
group_by(propaddress) %>%
fill(zoning) %>%
fill(zoning, .direction = "up") %>%
ungroup()
View(nested)
View(nested)
nested <- multiples %>%
group_by(propaddress, parcel_address) %>%
summarize_at(vars(zoning,lotsize_sf,
buildingarea, countylandusedescription,
residential, category, category_detail, building_type,
yearbuilt, long, lat), list) %>%
rename_at(vars(-propaddress, -parcel_address), ~ paste0(., "_list")) %>%
mutate(nprops = map(zoning_list, length),
zoning = map(zoning_list, Mode),
lotsize_sf_sum = map_dbl(lotsize_sf_list, sum, na.rm = TRUE),
buildingarea = map_dbl(buildingarea_list, sum, na.rm = TRUE),
countylandusedescription = map(countylandusedescription_list, Mode),
residential = map(residential_list, max, na.rm = FALSE),
category = map(category_list, Mode),
category_detail = map(category_detail_list, Mode),
building_type = ifelse(category == "MF",
map(building_type_list, Mode),
NA),
long = map(long_list, median),
lat = map(lat_list, median),
# year built handled differently due to missing values
yearbuilt_list = ifelse(as.integer(map(yearbuilt_list, function(x) sum(!is.na(x)))) == 0,
NA,
yearbuilt_list),
yearbuilt = ifelse(!is.na(yearbuilt_list),
map(yearbuilt_list, max, na.rm = TRUE),
NA))
View(multiples)
View(multiples)
nested <- nested %>%
mutate(nprops = as.integer(nprops),
lotsize_sf_sum = as.integer(lotsize_sf_sum),
unique_lots = map(lotsize_sf_list, function(x) length(unique(x))),
lsfirst = map(lotsize_sf_list, function(x) x[1]),
lsmode = ifelse(lotsize_sf_sum == 0,
NA,
map(lotsize_sf_list, Mode, na.rm = TRUE))
) %>%
ungroup()
nested <- multiples %>%
group_by(propaddress, parcel_address) %>%
summarize_at(vars(zoning,lotsize_sf,
buildingarea, countylandusedescription,
residential, category, category_detail, building_type,
yearbuilt, long, lat), list) %>%
rename_at(vars(-propaddress, -parcel_address), ~ paste0(., "_list")) %>%
mutate(nprops = map(zoning_list, length),
zoning = map(zoning_list, Mode),
lotsize_sf_sum = map_dbl(lotsize_sf_list, sum, na.rm = TRUE),
buildingarea = map_dbl(buildingarea_list, sum, na.rm = TRUE),
countylandusedescription = map(countylandusedescription_list, Mode),
residential = map(residential_list, max, na.rm = FALSE),
category = map(category_list, Mode),
category_detail = map(category_detail_list, Mode),
building_type = ifelse(category == "MF",
map(building_type_list, Mode),
NA),
long = map(long_list, median),
lat = map(lat_list, median),
# year built handled differently due to missing values
yearbuilt_list = ifelse(as.integer(map(yearbuilt_list, function(x) sum(!is.na(x)))) == 0,
NA,
yearbuilt_list),
yearbuilt = ifelse(!is.na(yearbuilt_list),
map(yearbuilt_list, max, na.rm = TRUE),
NA))
nested_other <- nested %>%
filter(fxn == "other") %>%
mutate(lsmode_num = ifelse(map(lsmode, length) > 1, NA, lsmode),
lsmode_num = as.integer(lsmode_num),
fxn = case_when(
nprops > 500 ~ "missing",
lsmode_num > 8000 ~ "mode",
TRUE ~ "sum"
))
nested <- nested %>%
mutate(fxn = case_when(
lotsize_sf_sum < 1 ~ "missing",
nprops == unique_lots ~ "sum",
unique_lots == 1 ~ "first",
TRUE ~ "other"
))
nested <- nested %>%
mutate(nprops = as.integer(nprops),
lotsize_sf_sum = as.integer(lotsize_sf_sum),
unique_lots = map(lotsize_sf_list, function(x) length(unique(x))),
lsfirst = map(lotsize_sf_list, function(x) x[1]),
lsmode = ifelse(lotsize_sf_sum == 0,
NA,
map(lotsize_sf_list, Mode, na.rm = TRUE))
) %>%
ungroup()
nested <- nested %>%
mutate(fxn = case_when(
lotsize_sf_sum < 1 ~ "missing",
nprops == unique_lots ~ "sum",
unique_lots == 1 ~ "first",
TRUE ~ "other"
))
nested %>% count(fxn)
nested_done <- nested %>%
filter(fxn != "other")
nested_other <- nested %>%
filter(fxn == "other") %>%
mutate(lsmode_num = ifelse(map(lsmode, length) > 1, NA, lsmode),
lsmode_num = as.integer(lsmode_num),
fxn = case_when(
nprops > 500 ~ "missing",
lsmode_num > 8000 ~ "mode",
TRUE ~ "sum"
))
count(nested_other, fxn)
nested_all <- bind_rows(nested_done, nested_other) %>%
mutate_at(vars(lotsize_sf_sum, lsfirst, lsmode_num), as.double) %>%
mutate(lotsize_sf_final =
case_when(fxn == "first" ~ lsfirst,
fxn == "sum" ~ lotsize_sf_sum,
fxn == "mode" ~ lsmode_num))
count(nested_all, fxn == "missing")
count(nested_all, is.na(lotsize_sf_final))
stopifnot(nrow(nested_all) == nrow(nested))
rm(nested, nested_done, nested_other)
stopifnot(nrow(nested_all) == nrow(nested))
